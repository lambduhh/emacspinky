;;; clojure-essential-ref-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from clojure-essential-ref.el

(autoload 'clojure-essential-ref "clojure-essential-ref" "\
Open Clojure documentation for symbol.

Book \"Clojure, The Essential Reference\" is used as a documentation source.

Prompts for the symbol to use, or uses the symbol at point, depending on
the value of `cider-prompt-for-symbol'.  With prefix arg ARG, does the
opposite of what that option dictates.

(fn &optional ARG)" t)
(autoload 'clojure-essential-ref-web "clojure-essential-ref" "\
Open Clojure documentation for symbol in the default web browser.

Online version of book \"Clojure, The Essential Reference\" is
used as a documentation source.

Prompts for the symbol to use, or uses the symbol at point, depending on
the value of `cider-prompt-for-symbol'.  With prefix arg ARG, does the
opposite of what that option dictates.

(fn &optional ARG)" t)
(register-definition-prefixes "clojure-essential-ref" '("clojure-essential-ref-"))

;;; End of scraped data

(provide 'clojure-essential-ref-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; clojure-essential-ref-autoloads.el ends here
